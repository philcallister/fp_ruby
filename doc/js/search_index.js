var search_data = {"index":{"searchIndex":["dictionary","generator","object","string","wordio","add_word()","add_words()","load_words()","new()","ngrams()","process()","unique_segments()","write_words()","gemfile","gemfile.lock","rakefile","created.rid"],"longSearchIndex":["dictionary","generator","object","string","wordio","dictionary#add_word()","dictionary#add_words()","wordio::load_words()","generator::new()","string#ngrams()","generator#process()","dictionary#unique_segments()","wordio::write_words()","","","",""],"info":[["Dictionary","","Dictionary.html","","<p>Maintain a Dictionary of 4-gram segments as words are added to it.  Once\nwords have been added, the 4-gram …\n"],["Generator","","Generator.html","","<p>This is a simple generator that takes the required input information and\ngenerates the required output. …\n"],["Object","","Object.html","",""],["String","","String.html","","<p>Monkey patched String class to include n-gram support\n"],["WordIO","","WordIO.html","","<p>WordIO is a simple class used to read words from an input file and write\nquestions/answers to an output …\n"],["add_word","Dictionary","Dictionary.html#method-i-add_word","(word)","<p>Add a new word to the Dictionary.  The word is transformed into 4-gram\nsegments, and the original word …\n"],["add_words","Dictionary","Dictionary.html#method-i-add_words","(*words)","<p>Add new words to the Dictionary.  The words are transformed into 4-gram\nsegments.\n<p>words - The words to …\n"],["load_words","WordIO","WordIO.html#method-c-load_words","(in_file, &block)","<p>Read words from the given input file. For each word, the given block is\ncalled for processing.\n<p>in_file …\n"],["new","Generator","Generator.html#method-c-new","()",""],["ngrams","String","String.html#method-i-ngrams","(n=2, rx=//)","<p>Return n-grams for the String.\n<p>n - The size of the n-grams\n<p>rx - The Regex used to split the String\n"],["process","Generator","Generator.html#method-i-process","(word_in_file, question_out_file, answer_out_file, ignore_case)","<p>Everything in the excercise happens within this process sequence.\n<p>word_in_file - The input file containing …\n"],["unique_segments","Dictionary","Dictionary.html#method-i-unique_segments","(with_words=false, ignore_case=false)","<p>Return the unique, sorted 4-gram segments from added words.\n<p>with_words - false: only return the segments …\n"],["write_words","WordIO","WordIO.html#method-c-write_words","(out_file, words, &block)","<p>Write the given words to the given output file. For each word, the given\nblock is called for any additional …\n"],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p>gem &#39;pry&#39;\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  coderay (1.1.0)\n  method_source (0.8.2)\n  pry (0.10.0)\n    ...</pre>\n"],["Rakefile","","Rakefile.html","","<p>require &#39;rake/testtask&#39; Dir.each { |f| require_relative f }\n<p>task :default =&gt; [&#39;test&#39;] …\n"],["created.rid","","doc/created_rid.html","",""]]}}